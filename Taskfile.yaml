---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

set: [pipefail]
shopt: [globstar]

vars:
  TALHELPER_CLUSTER_DIR: "./clusterconfig"
  TALHELPER_SECRET_FILE: "./talsecret.sops.yaml"
  TALHELPER_CONFIG_FILE: "./talconfig.yaml"

env:
  KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"

tasks:
  default: task --list

  bootstrap-talos:
    desc: Bootstrap the Talos cluster
    cmds:
      # Generate new secret
      - talhelper gensecret > {{.TALHELPER_SECRET_FILE}}
      # Encrypt secret file
      - sops --encrypt --in-place {{.TALHELPER_SECRET_FILE}}
      # Generate Talos Node configs
      - talhelper genconfig --config-file {{.TALHELPER_CONFIG_FILE}} --secret-file {{.TALHELPER_SECRET_FILE}}
      # Apply Talos Node configs
      - talhelper gencommand apply --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags="--insecure" | bash
      # Bootstrap etcd onto the cluster
      - until talhelper gencommand bootstrap --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} | bash; do sleep 10; done
      # Get Kubeconfig when it's available
      - until talhelper gencommand kubeconfig --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
      # Apply extra configs
      - task: helm
      # Make sure everything is healthy
      - talosctl health --server=false
    deps:
      - sops
    preconditions:
      - msg: Missing talhelper config file
        sh: test -f {{.TALHELPER_CONFIG_FILE}}
      - msg: Missing Sops config file
        sh: test -f {{.SOPS_CONFIG_FILE}}
      - msg: Missing Sops Age key file
        sh: test -f {{.SOPS_AGE_KEY_FILE}}

  helm:
    internal: true
    dir: ./bootstrap/
    cmds:
      # Wait all nodes to be available
      - until kubectl wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done
      # Apply helmfile to install prerequisite for the cluster
      - helmfile --file helmfile.yaml apply --skip-diff-on-install --suppress-diff
      # Wait all nodes to be ready
      - until kubectl wait --for=condition=Ready nodes --all --timeout=600s; do sleep 10; done
    preconditions:
      - msg: Missing kubeconfig
        sh: test -f {{.KUBECONFIG}}
      - msg: Missing helmfile
        sh: test -f helmfile.yaml

  bootstrap-secret:
    desc: Init sops/age key and bootstrap secret
    cmds:
      - task: sops
      - talhelper gensecret > {{.TALHELPER_SECRET_FILE}}
      - sops --encrypt --in-place {{.TALHELPER_SECRET_FILE}}

  sops:
    internal: true
    desc: Bootstrap the Sops Age key
    cmd: age-keygen --output {{.SOPS_AGE_KEY_FILE}}
    status:
      - test -f {{.SOPS_AGE_KEY_FILE}}

  reset:
    desc: Reset nodes back to maintenance mode
    cmd: "talhelper gencommand reset \
      --config-file {{.TALHELPER_CONFIG_FILE}} \
      --out-dir {{.TALHELPER_CLUSTER_DIR}} \
      --extra-flags=\"--reboot --graceful=false --wait=false \
      {{- if eq .CLI_FORCE false }} \
      --system-labels-to-wipe STATE \
      --system-labels-to-wipe EPHEMERAL \
      {{ end }}\" | bash "
    preconditions:
      - msg: Missing talosconfig file
        sh: test -f {{.TALOSCONFIG}}
